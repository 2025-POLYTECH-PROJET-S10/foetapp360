{"version":3,"file":"attempt.min.js","sources":["../src/attempt.js"],"sourcesContent":["define(['jquery'], function($) {\n    return {\n        init: function() {\n            $(\".rotation_hippotrack_container\").each(function() {\n                let rotationhippotrack_container = $(this);\n                let hippotrack_container = rotationhippotrack_container.find(\".hippotrack_container\");\n\n                if (!hippotrack_container.length) { return; }\n\n                let schemaType = hippotrack_container.data(\"schema-type\");\n                if (!schemaType) { return; }\n\n                let targetInteriorImage = hippotrack_container.find(\".\" + schemaType + \"_interieur\");\n                let targetContourImage = hippotrack_container.find(\".\" + schemaType + \"_contour\");\n\n                let rotateSlider = rotationhippotrack_container.find(\".rotate-slider\");\n                let moveSlider = rotationhippotrack_container.find(\".move-axis-slider\");\n\n                let rotationAngle = rotateSlider.val();\n                let translateDistance = moveSlider.val();\n                updateTransform();\n\n                /**\n                 * Met à jour la transformation CSS des images.\n                 */\n                function updateTransform() {\n                    let radian = (rotationAngle * Math.PI) / 180;\n                    let xOffset = translateDistance * Math.sin(radian);\n                    let yOffset = -translateDistance * Math.cos(radian);\n\n                    if (targetInteriorImage.length) {\n                        targetInteriorImage.css(\"transform\", `translate(${xOffset}px, ${yOffset}px) rotate(${rotationAngle}deg)`);\n                    }\n                    if (targetContourImage.length) {\n                        targetContourImage.css(\"transform\", `rotate(${rotationAngle}deg)`);\n                    }\n                }\n\n                rotateSlider.on(\"input\", function() {\n                    rotationAngle = parseInt($(this).val(), 10);\n                    updateTransform();\n                });\n\n                moveSlider.on(\"input\", function() {\n                    translateDistance = parseInt($(this).val(), 10);\n                    updateTransform();\n                });\n            });\n\n            $(\".image_cycling_hippotrack_container\").each(function() {\n                let hippotrack_container = $(this);\n                let fullPrefix = hippotrack_container.data(\"prefix\") || \"\";\n                let cyclingImage = hippotrack_container.find(\".hippotrack_attempt_cycling-image\");\n                let hiddenInput = hippotrack_container.find(\".hippotrack_attempt_selected_position\");\n\n                let currentPosition = parseInt(cyclingImage.data(\"current\"), 10) || 1;\n                let variation = fullPrefix.includes(\"_bf\") ? \"bf\" : \"mf\";\n                let basePrefix = fullPrefix.replace(/_(bf_|mf_)$/, \"\");\n\n                /**\n                 * Met à jour l'image affichée en fonction de la position et de la variation.\n                 */\n                function updateImage() {\n                    let imagePath = `/mod/hippotrack/pix/${basePrefix}_${variation}_${currentPosition}.png`;\n                    cyclingImage.attr(\"src\", imagePath);\n                    let imageName = `${basePrefix}_${variation}_${currentPosition}`;\n                    hiddenInput.val(imageName);\n                }\n\n                let max_image = 8;\n                let min_image = 1;\n\n                hippotrack_container.find(\".hippotrack_attempt_prev-btn\").on(\"click\", function() {\n                    currentPosition = currentPosition > min_image ? currentPosition - 1 : max_image;\n                    updateImage();\n                });\n\n                hippotrack_container.find(\".hippotrack_attempt_next-btn\").on(\"click\", function() {\n                    currentPosition = currentPosition < max_image ? currentPosition + 1 : min_image;\n                    updateImage();\n                });\n\n                hippotrack_container.find(\".hippotrack_attempt_toggle_btn\").on(\"click\", function() {\n                    variation = (variation === \"bf\") ? \"mf\" : \"bf\";\n                    updateImage();\n                });\n            });\n\n            // Gestion des onglets et du contenu affiché\n            $(\".attempt_container\").hide();\n            $(\".hippotrack-tab.active\").each(function() {\n                $($(this).data(\"target\")).show();\n                $(this).addClass(\"hippotrack_given_tab_input\");\n            });\n\n            $(\".hippotrack-tab\").click(function() {\n                $(\".hippotrack-tab\").removeClass(\"active\");\n                $(this).addClass(\"active\");\n\n                $(\".attempt_container\").hide();\n                $($(this).data(\"target\")).show();\n            });\n\n            // Gestion message lorsque inputs manquants.\n            document.getElementById(\"submit_attempt\").addEventListener(\"click\", function(event) {\n                let inputs = document.querySelectorAll(\"#attempt_form input[type='text']\");\n                // Vérifier si l'overlay existe déjà\n                let overlay = document.getElementById('attempt_error_overlay');\n                if (!overlay) {\n                    // Créer l'élément overlay si il n'existe pas\n                    overlay = document.createElement('div');\n                    overlay.id = 'attempt_error_overlay';\n                    overlay.innerHTML = `\n                        <p>Veuillez remplir tous les champs.</p>\n                        <button id=\"attempt_close_overlay\">Fermer</button>\n                    `;\n                    document.body.appendChild(overlay);\n                    // Ajouter un gestionnaire d'événements pour fermer l'overlay\n                    document.getElementById(\"attempt_close_overlay\").addEventListener(\"click\", function() {\n                        overlay.style.display = 'none'; // Cache l'overlay\n                    });\n                }\n                // Vérifier si un champ est vide\n                for (let input of inputs) {\n                    if (input.value.trim() === \"\") {\n                        overlay.style.display = 'flex';  // Affiche l'overlay\n                        event.preventDefault(); // Empêche l'envoi du formulaire\n                        return;\n                    }\n                }\n                // Si tout est validé, on cache l'overlay\n                overlay.style.display = 'none';\n            });\n        }\n    };\n});\n"],"names":["define","$","init","each","rotationhippotrack_container","this","hippotrack_container","find","length","schemaType","data","targetInteriorImage","targetContourImage","rotateSlider","moveSlider","rotationAngle","val","translateDistance","updateTransform","radian","Math","PI","xOffset","sin","yOffset","cos","css","on","parseInt","fullPrefix","cyclingImage","hiddenInput","currentPosition","variation","includes","basePrefix","replace","updateImage","imagePath","attr","imageName","hide","show","addClass","click","removeClass","document","getElementById","addEventListener","event","inputs","querySelectorAll","overlay","createElement","id","innerHTML","body","appendChild","style","display","input","value","trim","preventDefault"],"mappings":"AAAAA,gCAAO,CAAC,WAAW,SAASC,SACjB,CACHC,KAAM,WACFD,EAAE,kCAAkCE,MAAK,eACjCC,6BAA+BH,EAAEI,MACjCC,qBAAuBF,6BAA6BG,KAAK,6BAExDD,qBAAqBE,kBAEtBC,WAAaH,qBAAqBI,KAAK,mBACtCD,sBAEDE,oBAAsBL,qBAAqBC,KAAK,IAAME,WAAa,cACnEG,mBAAqBN,qBAAqBC,KAAK,IAAME,WAAa,YAElEI,aAAeT,6BAA6BG,KAAK,kBACjDO,WAAaV,6BAA6BG,KAAK,qBAE/CQ,cAAgBF,aAAaG,MAC7BC,kBAAoBH,WAAWE,eAM1BE,sBACDC,OAAUJ,cAAgBK,KAAKC,GAAM,IACrCC,QAAUL,kBAAoBG,KAAKG,IAAIJ,QACvCK,SAAWP,kBAAoBG,KAAKK,IAAIN,QAExCR,oBAAoBH,QACpBG,oBAAoBe,IAAI,gCAA0BJ,uBAAcE,8BAAqBT,uBAErFH,mBAAmBJ,QACnBI,mBAAmBc,IAAI,6BAAuBX,uBAdtDG,kBAkBAL,aAAac,GAAG,SAAS,WACrBZ,cAAgBa,SAAS3B,EAAEI,MAAMW,MAAO,IACxCE,qBAGJJ,WAAWa,GAAG,SAAS,WACnBV,kBAAoBW,SAAS3B,EAAEI,MAAMW,MAAO,IAC5CE,wBAIRjB,EAAE,uCAAuCE,MAAK,eACtCG,qBAAuBL,EAAEI,MACzBwB,WAAavB,qBAAqBI,KAAK,WAAa,GACpDoB,aAAexB,qBAAqBC,KAAK,qCACzCwB,YAAczB,qBAAqBC,KAAK,yCAExCyB,gBAAkBJ,SAASE,aAAapB,KAAK,WAAY,KAAO,EAChEuB,UAAYJ,WAAWK,SAAS,OAAS,KAAO,KAChDC,WAAaN,WAAWO,QAAQ,cAAe,aAK1CC,kBACDC,wCAAmCH,uBAAcF,sBAAaD,wBAClEF,aAAaS,KAAK,MAAOD,eACrBE,oBAAeL,uBAAcF,sBAAaD,iBAC9CD,YAAYf,IAAIwB,WAMpBlC,qBAAqBC,KAAK,gCAAgCoB,GAAG,SAAS,WAClEK,gBAAkBA,gBAHN,EAGoCA,gBAAkB,EAJtD,EAKZK,iBAGJ/B,qBAAqBC,KAAK,gCAAgCoB,GAAG,SAAS,WAClEK,gBAAkBA,gBATN,EASoCA,gBAAkB,EARtD,EASZK,iBAGJ/B,qBAAqBC,KAAK,kCAAkCoB,GAAG,SAAS,WACpEM,UAA2B,OAAdA,UAAsB,KAAO,KAC1CI,oBAKRpC,EAAE,sBAAsBwC,OACxBxC,EAAE,0BAA0BE,MAAK,WAC7BF,EAAEA,EAAEI,MAAMK,KAAK,WAAWgC,OAC1BzC,EAAEI,MAAMsC,SAAS,iCAGrB1C,EAAE,mBAAmB2C,OAAM,WACvB3C,EAAE,mBAAmB4C,YAAY,UACjC5C,EAAEI,MAAMsC,SAAS,UAEjB1C,EAAE,sBAAsBwC,OACxBxC,EAAEA,EAAEI,MAAMK,KAAK,WAAWgC,UAI9BI,SAASC,eAAe,kBAAkBC,iBAAiB,SAAS,SAASC,WACrEC,OAASJ,SAASK,iBAAiB,oCAEnCC,QAAUN,SAASC,eAAe,yBACjCK,UAEDA,QAAUN,SAASO,cAAc,OACjCD,QAAQE,GAAK,wBACbF,QAAQG,iLAIRT,SAASU,KAAKC,YAAYL,SAE1BN,SAASC,eAAe,yBAAyBC,iBAAiB,SAAS,WACvEI,QAAQM,MAAMC,QAAU,eAI3B,IAAIC,SAASV,UACa,KAAvBU,MAAMC,MAAMC,cACZV,QAAQM,MAAMC,QAAU,YACxBV,MAAMc,iBAKdX,QAAQM,MAAMC,QAAU"}